
Жизненный цикл (события) реактивного стрима	Reactive	Junior

Какая в spring реактивная замена для Spring Web MVC и tomcat?	Reactive	Junior

Что делают операции zip  concat  merge	Reactive	Junior

Общая концепция реактивного подхода,  сравнить  с многопоточностью	Reactive	Junior

Работает ли threadLocal в реактивном коде? Какие альтернативы?	Reactive	Middle

Какие средства тестирования реактивного кода предоставляет библиотека reactor-test?	Reactive	Middle


Reactive manifesto  основные понятия	Reactive	Middle

Можно ли встраивать блокирующий код в реактивный? Как это правильно делать?	Reactive	Middle


Выполняется ли реактивный код многопоточно? Можно ли параллелить реактивный код? Как?	Reactive	Senior


Как работают publishOn и subscribeOn?	Reactive	Senior


Как реактивные библиотеки java взаимодействуют между собой? Reactive Streams	Reactive	Senior




Что такое Pull vs Push модели?
Как они связаны с реактивными потоками?

Объясните, что такое Reactive Streams (Specification).
Назовите ключевые интерфейсы и их назначение.



Reactor
Чем отличается Mono от Flux?
Когда вы будете использовать Mono.empty() вместо Mono.just(null)?

Что такое Backpressure и как он обрабатывается в Reactor?
Какие стратегии backpressure вы знаете? (e.g., onBackpressureDrop, onBackpressureBuffer)

Как работают операторы map, flatMap, concatMap и switchMap?
В чем разница между flatMap и concatMap? Когда использовать каждый?

Что такое "холодные" (Cold) и "горячие" (Hot) потоки?
Приведите примеры каждого типа.

Как выполнить несколько Mono параллельно и объединить результаты?
Какие операторы вы используете? (zip, zipWith, then)


Как управлять потоком выполнения в Reactor?
Что такое Schedulers и какие реализации вы знаете?



Обработка ошибок

Какие способы обработки ошибок в Reactor вы знаете?
Примеры: onErrorReturn, onErrorResume, doOnError, retry.

Как организовать повторные попытки (retry) с экспоненциальной задержкой?
Используйте retryWhen с кастомной логикой.

Что произойдет, если ошибка не будет обработана в цепочке?
Как это повлияет на приложение?


Тестирование
Как вы тестируете реактивные цепочки?
Расскажите о StepVerifier и его основных методах.

Как протестировать временные условия, например, задержки?
Используйте StepVerifier.withVirtualTime.

Как mock-ить реактивные вызовы в тестах?
Пример с Mockito для Mono/Flux.



Производительность и оптимизация
Как вы диагностируете проблемы с производительностью в реактивном приложении?
Какие метрики и инструменты используете? (e.g., Micrometer, Reactor Debug Agent)

Что такое "Assembly Time" в Reactor?
Почему важно избегать сложной логики в операторах типа transform?

Как избежать утечек памяти в реактивных приложениях?
Примеры с неправильным использованием Sinks или подписок.



Интеграция с другими технологиями
Как интегрировать реактивные потоки с базой данных?
*Опыт работы с R2DBC, реактивными драйверами MongoDB/Cassandra.*

Как организовать взаимодействие между реактивными и нереактивными компонентами?
Пример: вызов блокирующего REST-сервиса из реактивного кода.

Использование WebClient vs RestTemplate.
Как обрабатывать ошибки и повторные запросы в WebClient?



Безопасность и продвинутые паттерны
Как реализовать аутентификацию в реактивном веб-приложении?
Пример с Spring Security и ReactiveSecurityContextHolder.

Что такое Circuit Breaker в реактивных приложениях?
Опыт использования Resilience4J с Reactor.

Как управлять состоянием в реактивном приложении?
Паттерны для кеширования, использования Sinks для кастомных потоков.



Архитектура и лучшие практики
Какие антипаттерны встречаются в реактивном коде?
Примеры: блокирующие вызовы внутри цепочки, игнорирование backpressure.

Как вы организуете код в большом реактивном проекте?
Паттерны для модульности, тестируемости и читаемости.

Когда НЕ стоит использовать реактивный подход?
Аргументируйте, исходя из производительности, сложности и требований проекта.

Практические задачи
Написать реактивный цепочку для:
Запроса к двум внешним сервисам, объединения результатов с обработкой ошибок и таймаутов.

Реализовать backpressure-aware поток:
Генерация данных с высокой скоростью и обработка с стратегией onBackpressureDrop.

Написать тест для цепочки с задержками и retry-логикой.

